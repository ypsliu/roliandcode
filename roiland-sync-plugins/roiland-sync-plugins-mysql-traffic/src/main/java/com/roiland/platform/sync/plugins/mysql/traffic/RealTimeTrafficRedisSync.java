package com.roiland.platform.sync.plugins.mysql.traffic;

import com.roiland.platform.dbutils.DBConn;
import com.roiland.platform.dbutils.bean.DBConnBean;
import com.roiland.platform.dbutils.helper.DBTemplate;
import com.roiland.platform.spi.annotation.Extension;
import com.roiland.platform.sync.plugins.core.RedisSync;
import com.roiland.platform.sync.plugins.core.SyncRecord;
import com.roiland.platform.sync.plugins.core.SyncRecordType;
import org.skife.jdbi.v2.Handle;
import org.skife.jdbi.v2.PreparedBatch;

import java.io.IOException;
import java.math.BigDecimal;
import java.util.*;

/**
 * @author leon.chen
 * @since 2016/9/9
 */
@Extension("sync")
public class RealTimeTrafficRedisSync implements RedisSync {

    private static final String SCHEMA = "dcs-common";

    private static final String SQL = "REPLACE INTO `t_veh_curr_traffic` (`cn`, `st`, `ct`, `0002`, `0002_st`, `0002_ct`, `0003`, `0003_st`, `0003_ct`, `4013`, `4013_st`, `4013_ct`, `0004`, `0004_st`, `0004_ct`, `0005`, `0005_st`, `0005_ct`, `0006`, `0006_st`, `0006_ct`, `0007`, `0007_st`, `0007_ct`, `0008`, `0008_st`, `0008_ct`, `0009`, `0009_st`, `0009_ct`, `000A`, `000A_st`, `000A_ct`, `000B`, `000B_st`, `000B_ct`, `000D`, `000D_st`, `000D_ct`, `000E`, `000E_st`, `000E_ct`, `0010`, `0010_st`, `0010_ct`, `0011`, `0011_st`, `0011_ct`, `0014`, `0014_st`, `0014_ct`, `001F`, `001F_st`, `001F_ct`, `0024`, `0024_st`, `0024_ct`, `0025`, `0025_st`, `0025_ct`, `0027`, `0027_st`, `0027_ct`, `0028`, `0028_st`, `0028_ct`, `0029`, `0029_st`, `0029_ct`, `002A`, `002A_st`, `002A_ct`, `002B`, `002B_st`, `002B_ct`, `002C`, `002C_st`, `002C_ct`, `002D`, `002D_st`, `002D_ct`, `002E`, `002E_st`, `002E_ct`, `002F`, `002F_st`, `002F_ct`, `0030`, `0030_st`, `0030_ct`, `0031`, `0031_st`, `0031_ct`, `0032`, `0032_st`, `0032_ct`, `0033`, `0033_st`, `0033_ct`, `0034`, `0034_st`, `0034_ct`, `0035`, `0035_st`, `0035_ct`, `0036`, `0036_st`, `0036_ct`, `0039`, `0039_st`, `0039_ct`, `0040`, `0040_st`, `0040_ct`, `0041`, `0041_st`, `0041_ct`, `0042`, `0042_st`, `0042_ct`, `0043`, `0043_st`, `0043_ct`, `0044`, `0044_st`, `0044_ct`, `0045`, `0045_st`, `0045_ct`, `0046`, `0046_st`, `0046_ct`, `0047`, `0047_st`, `0047_ct`, `0048`, `0048_st`, `0048_ct`, `0049`, `0049_st`, `0049_ct`, `004A`, `004A_st`, `004A_ct`, `7D01`, `7D01_st`, `7D01_ct`, `7D02`, `7D02_st`, `7D02_ct`, `7D03`, `7D03_st`, `7D03_ct`, `7D04`, `7D04_st`, `7D04_ct`, `7D05`, `7D05_st`, `7D05_ct`, `7D06`, `7D06_st`, `7D06_ct`, `7D07`, `7D07_st`, `7D07_ct`, `7D08`, `7D08_st`, `7D08_ct`, `7D09`, `7D09_st`, `7D09_ct`, `7D0A`, `7D0A_st`, `7D0A_ct`, `7D0B`, `7D0B_st`, `7D0B_ct`, `7D0C`, `7D0C_st`, `7D0C_ct`, `7D0D`, `7D0D_st`, `7D0D_ct`, `7F01`, `7F01_st`, `7F01_ct`, `7F02`, `7F02_st`, `7F02_ct`, `7F03`, `7F03_st`, `7F03_ct`, `7F04`, `7F04_st`, `7F04_ct`, `7F05`, `7F05_st`, `7F05_ct`, `7F06`, `7F06_st`, `7F06_ct`, `7F07`, `7F07_st`, `7F07_ct`, `7F08`, `7F08_st`, `7F08_ct`, `7F09`, `7F09_st`, `7F09_ct`, `7F0A`, `7F0A_st`, `7F0A_ct`, `7F0B`, `7F0B_st`, `7F0B_ct`, `7F0C`, `7F0C_st`, `7F0C_ct`, `7F0D`, `7F0D_st`, `7F0D_ct`, `7F0E`, `7F0E_st`, `7F0E_ct`, `7F0F`, `7F0F_st`, `7F0F_ct`, `7F10`, `7F10_st`, `7F10_ct`, `7F11`, `7F11_st`, `7F11_ct`, `7F12`, `7F12_st`, `7F12_ct`, `7F13`, `7F13_st`, `7F13_ct`, `7F14`, `7F14_st`, `7F14_ct`, `7F15`, `7F15_st`, `7F15_ct`, `7F16`, `7F16_st`, `7F16_ct`, `7F17`, `7F17_st`, `7F17_ct`, `7F18`, `7F18_st`, `7F18_ct`, `7F19`, `7F19_st`, `7F19_ct`, `7F1A`, `7F1A_st`, `7F1A_ct`, `7F1B`, `7F1B_st`, `7F1B_ct`, `7F1C`, `7F1C_st`, `7F1C_ct`, `7F1D`, `7F1D_st`, `7F1D_ct`, `7F1E`, `7F1E_st`, `7F1E_ct`, `7F1F`, `7F1F_st`, `7F1F_ct`, `7F20`, `7F20_st`, `7F20_ct`, `7F21`, `7F21_st`, `7F21_ct`, `7F22`, `7F22_st`, `7F22_ct`, `7F23`, `7F23_st`, `7F23_ct`, `7F24`, `7F24_st`, `7F24_ct`, `7F25`, `7F25_st`, `7F25_ct`, `7F26`, `7F26_st`, `7F26_ct`, `7F27`, `7F27_st`, `7F27_ct`, `7F28`, `7F28_st`, `7F28_ct`, `7F29`, `7F29_st`, `7F29_ct`, `7F2A`, `7F2A_st`, `7F2A_ct`, `7F2B`, `7F2B_st`, `7F2B_ct`, `7F2C`, `7F2C_st`, `7F2C_ct`, `7F2D`, `7F2D_st`, `7F2D_ct`, `7F2E`, `7F2E_st`, `7F2E_ct`, `7F2F`, `7F2F_st`, `7F2F_ct`, `7F30`, `7F30_st`, `7F30_ct`, `7F31`, `7F31_st`, `7F31_ct`, `7F32`, `7F32_st`, `7F32_ct`, `8001`, `8001_st`, `8001_ct`, `8002`, `8002_st`, `8002_ct`, `8003`, `8003_st`, `8003_ct`, `8004`, `8004_st`, `8004_ct`, `8005`, `8005_st`, `8005_ct`, `8006`, `8006_st`, `8006_ct`, `8007`, `8007_st`, `8007_ct`, `8008`, `8008_st`, `8008_ct`, `8009`, `8009_st`, `8009_ct`, `800A`, `800A_st`, `800A_ct`, `800B`, `800B_st`, `800B_ct`, `800C`, `800C_st`, `800C_ct`, `800D`, `800D_st`, `800D_ct`, `800E`, `800E_st`, `800E_ct`, `800F`, `800F_st`, `800F_ct`, `8010`, `8010_st`, `8010_ct`, `8011`, `8011_st`, `8011_ct`, `8051`, `8051_st`, `8051_ct`, `8052`, `8052_st`, `8052_ct`, `8053`, `8053_st`, `8053_ct`, `8054`, `8054_st`, `8054_ct`, `8055`, `8055_st`, `8055_ct`, `8056`, `8056_st`, `8056_ct`, `8057`, `8057_st`, `8057_ct`, `8058`, `8058_st`, `8058_ct`, `8059`, `8059_st`, `8059_ct`, `805A`, `805A_st`, `805A_ct`, `805B`, `805B_st`, `805B_ct`, `805C`, `805C_st`, `805C_ct`, `805D`, `805D_st`, `805D_ct`, `805E`, `805E_st`, `805E_ct`, `805F`, `805F_st`, `805F_ct`, `8060`, `8060_st`, `8060_ct`, `8061`, `8061_st`, `8061_ct`, `8062`, `8062_st`, `8062_ct`, `8063`, `8063_st`, `8063_ct`, `8064`, `8064_st`, `8064_ct`, `8065`, `8065_st`, `8065_ct`, `8066`, `8066_st`, `8066_ct`, `8067`, `8067_st`, `8067_ct`, `8068`, `8068_st`, `8068_ct`, `8069`, `8069_st`, `8069_ct`, `806A`, `806A_st`, `806A_ct`, `806B`, `806B_st`, `806B_ct`, `806C`, `806C_st`, `806C_ct`, `806D`, `806D_st`, `806D_ct`, `806E`, `806E_st`, `806E_ct`, `806F`, `806F_st`, `806F_ct`, `8070`, `8070_st`, `8070_ct`, `8071`, `8071_st`, `8071_ct`, `8072`, `8072_st`, `8072_ct`, `8073`, `8073_st`, `8073_ct`, `8074`, `8074_st`, `8074_ct`, `8075`, `8075_st`, `8075_ct`, `8076`, `8076_st`, `8076_ct`, `8077`, `8077_st`, `8077_ct`, `8078`, `8078_st`, `8078_ct`, `FF01`, `FF01_st`, `FF01_ct`, `0050`, `0051`, `0050_ct`, `0051_ct`, `0050_st`, `0051_st`, `0052`, `0053`, `0054`, `0055`, `0052_ct`, `0052_st`, `0053_ct`, `0053_st`, `0054_ct`, `0054_st`, `0055_ct`, `0055_st`, `0100`, `0100_ct`, `0100_st`, `0101`, `0101_ct`, `0101_st`, `0102`, `0102_ct`, `0102_st`, `0103`, `0103_ct`, `0103_st`, `8100`, `8100_ct`, `8100_st`, `8101`, `8101_ct`, `8101_st`, `8102`, `8102_ct`, `8102_st`, `8103`, `8103_ct`, `8103_st`, `8104`, `8104_ct`, `8104_st`, `8105`, `8105_ct`, `8105_st`, `8106`, `8106_ct`, `8106_st`, `8107`, `8107_ct`, `8107_st`, `8108`, `8108_ct`, `8108_st`, `8109`, `8109_ct`, `8109_st`, `810A`, `810A_ct`, `810A_st`, `810B`, `810B_ct`, `810B_st`, `0070`, `0070_ct`, `0070_st`, `0071`, `0071_ct`, `0071_st`, `0072`, `0072_ct`, `0072_st`, `0056`, `0056_ct`, `0056_st`, `0057`, `0057_ct`, `0057_st`) VALUES (:cn, :st, :ct, :0002, :0002_st, :0002_ct, :0003, :0003_st, :0003_ct, :4013, :4013_st, :4013_ct, :0004, :0004_st, :0004_ct, :0005, :0005_st, :0005_ct, :0006, :0006_st, :0006_ct, :0007, :0007_st, :0007_ct, :0008, :0008_st, :0008_ct, :0009, :0009_st, :0009_ct, :000A, :000A_st, :000A_ct, :000B, :000B_st, :000B_ct, :000D, :000D_st, :000D_ct, :000E, :000E_st, :000E_ct, :0010, :0010_st, :0010_ct, :0011, :0011_st, :0011_ct, :0014, :0014_st, :0014_ct, :001F, :001F_st, :001F_ct, :0024, :0024_st, :0024_ct, :0025, :0025_st, :0025_ct, :0027, :0027_st, :0027_ct, :0028, :0028_st, :0028_ct, :0029, :0029_st, :0029_ct, :002A, :002A_st, :002A_ct, :002B, :002B_st, :002B_ct, :002C, :002C_st, :002C_ct, :002D, :002D_st, :002D_ct, :002E, :002E_st, :002E_ct, :002F, :002F_st, :002F_ct, :0030, :0030_st, :0030_ct, :0031, :0031_st, :0031_ct, :0032, :0032_st, :0032_ct, :0033, :0033_st, :0033_ct, :0034, :0034_st, :0034_ct, :0035, :0035_st, :0035_ct, :0036, :0036_st, :0036_ct, :0039, :0039_st, :0039_ct, :0040, :0040_st, :0040_ct, :0041, :0041_st, :0041_ct, :0042, :0042_st, :0042_ct, :0043, :0043_st, :0043_ct, :0044, :0044_st, :0044_ct, :0045, :0045_st, :0045_ct, :0046, :0046_st, :0046_ct, :0047, :0047_st, :0047_ct, :0048, :0048_st, :0048_ct, :0049, :0049_st, :0049_ct, :004A, :004A_st, :004A_ct, :7D01, :7D01_st, :7D01_ct, :7D02, :7D02_st, :7D02_ct, :7D03, :7D03_st, :7D03_ct, :7D04, :7D04_st, :7D04_ct, :7D05, :7D05_st, :7D05_ct, :7D06, :7D06_st, :7D06_ct, :7D07, :7D07_st, :7D07_ct, :7D08, :7D08_st, :7D08_ct, :7D09, :7D09_st, :7D09_ct, :7D0A, :7D0A_st, :7D0A_ct, :7D0B, :7D0B_st, :7D0B_ct, :7D0C, :7D0C_st, :7D0C_ct, :7D0D, :7D0D_st, :7D0D_ct, :7F01, :7F01_st, :7F01_ct, :7F02, :7F02_st, :7F02_ct, :7F03, :7F03_st, :7F03_ct, :7F04, :7F04_st, :7F04_ct, :7F05, :7F05_st, :7F05_ct, :7F06, :7F06_st, :7F06_ct, :7F07, :7F07_st, :7F07_ct, :7F08, :7F08_st, :7F08_ct, :7F09, :7F09_st, :7F09_ct, :7F0A, :7F0A_st, :7F0A_ct, :7F0B, :7F0B_st, :7F0B_ct, :7F0C, :7F0C_st, :7F0C_ct, :7F0D, :7F0D_st, :7F0D_ct, :7F0E, :7F0E_st, :7F0E_ct, :7F0F, :7F0F_st, :7F0F_ct, :7F10, :7F10_st, :7F10_ct, :7F11, :7F11_st, :7F11_ct, :7F12, :7F12_st, :7F12_ct, :7F13, :7F13_st, :7F13_ct, :7F14, :7F14_st, :7F14_ct, :7F15, :7F15_st, :7F15_ct, :7F16, :7F16_st, :7F16_ct, :7F17, :7F17_st, :7F17_ct, :7F18, :7F18_st, :7F18_ct, :7F19, :7F19_st, :7F19_ct, :7F1A, :7F1A_st, :7F1A_ct, :7F1B, :7F1B_st, :7F1B_ct, :7F1C, :7F1C_st, :7F1C_ct, :7F1D, :7F1D_st, :7F1D_ct, :7F1E, :7F1E_st, :7F1E_ct, :7F1F, :7F1F_st, :7F1F_ct, :7F20, :7F20_st, :7F20_ct, :7F21, :7F21_st, :7F21_ct, :7F22, :7F22_st, :7F22_ct, :7F23, :7F23_st, :7F23_ct, :7F24, :7F24_st, :7F24_ct, :7F25, :7F25_st, :7F25_ct, :7F26, :7F26_st, :7F26_ct, :7F27, :7F27_st, :7F27_ct, :7F28, :7F28_st, :7F28_ct, :7F29, :7F29_st, :7F29_ct, :7F2A, :7F2A_st, :7F2A_ct, :7F2B, :7F2B_st, :7F2B_ct, :7F2C, :7F2C_st, :7F2C_ct, :7F2D, :7F2D_st, :7F2D_ct, :7F2E, :7F2E_st, :7F2E_ct, :7F2F, :7F2F_st, :7F2F_ct, :7F30, :7F30_st, :7F30_ct, :7F31, :7F31_st, :7F31_ct, :7F32, :7F32_st, :7F32_ct, :8001, :8001_st, :8001_ct, :8002, :8002_st, :8002_ct, :8003, :8003_st, :8003_ct, :8004, :8004_st, :8004_ct, :8005, :8005_st, :8005_ct, :8006, :8006_st, :8006_ct, :8007, :8007_st, :8007_ct, :8008, :8008_st, :8008_ct, :8009, :8009_st, :8009_ct, :800A, :800A_st, :800A_ct, :800B, :800B_st, :800B_ct, :800C, :800C_st, :800C_ct, :800D, :800D_st, :800D_ct, :800E, :800E_st, :800E_ct, :800F, :800F_st, :800F_ct, :8010, :8010_st, :8010_ct, :8011, :8011_st, :8011_ct, :8051, :8051_st, :8051_ct, :8052, :8052_st, :8052_ct, :8053, :8053_st, :8053_ct, :8054, :8054_st, :8054_ct, :8055, :8055_st, :8055_ct, :8056, :8056_st, :8056_ct, :8057, :8057_st, :8057_ct, :8058, :8058_st, :8058_ct, :8059, :8059_st, :8059_ct, :805A, :805A_st, :805A_ct, :805B, :805B_st, :805B_ct, :805C, :805C_st, :805C_ct, :805D, :805D_st, :805D_ct, :805E, :805E_st, :805E_ct, :805F, :805F_st, :805F_ct, :8060, :8060_st, :8060_ct, :8061, :8061_st, :8061_ct, :8062, :8062_st, :8062_ct, :8063, :8063_st, :8063_ct, :8064, :8064_st, :8064_ct, :8065, :8065_st, :8065_ct, :8066, :8066_st, :8066_ct, :8067, :8067_st, :8067_ct, :8068, :8068_st, :8068_ct, :8069, :8069_st, :8069_ct, :806A, :806A_st, :806A_ct, :806B, :806B_st, :806B_ct, :806C, :806C_st, :806C_ct, :806D, :806D_st, :806D_ct, :806E, :806E_st, :806E_ct, :806F, :806F_st, :806F_ct, :8070, :8070_st, :8070_ct, :8071, :8071_st, :8071_ct, :8072, :8072_st, :8072_ct, :8073, :8073_st, :8073_ct, :8074, :8074_st, :8074_ct, :8075, :8075_st, :8075_ct, :8076, :8076_st, :8076_ct, :8077, :8077_st, :8077_ct, :8078, :8078_st, :8078_ct, :FF01, :FF01_st, :FF01_ct, :0050, :0051, :0050_ct, :0051_ct, :0050_st, :0051_st, :0052, :0053, :0054, :0055, :0052_ct, :0052_st, :0053_ct, :0053_st, :0054_ct, :0054_st, :0055_ct, :0055_st, :0100, :0100_ct, :0100_st, :0101, :0101_ct, :0101_st, :0102, :0102_ct, :0102_st, :0103, :0103_ct, :0103_st, :8100, :8100_ct, :8100_st, :8101, :8101_ct, :8101_st, :8102, :8102_ct, :8102_st, :8103, :8103_ct, :8103_st, :8104, :8104_ct, :8104_st, :8105, :8105_ct, :8105_st, :8106, :8106_ct, :8106_st, :8107, :8107_ct, :8107_st, :8108, :8108_ct, :8108_st, :8109, :8109_ct, :8109_st, :810A, :810A_ct, :810A_st, :810B, :810B_ct, :810B_st, :0070, :0070_ct, :0070_st, :0071, :0071_ct, :0071_st, :0072, :0072_ct, :0072_st, :0056, :0056_ct, :0056_st, :0057, :0057_ct, :0057_st);";

    @Override
    public void init() {
        DBConn.initialize(Arrays.asList(new DBConnBean(SCHEMA, System.getProperty("mysql.dcs-common.url"), System.getProperty("mysql.dcs-common.username"), System.getProperty("mysql.dcs-common.password"))));
    }

    @Override
    public int batchSize() {
        return 20;
    }

    @Override
    public int syncPeriod() {
        return 30000;
    }

    @Override
    public int saveThreads() {
        return 5;
    }

    @Override
    public String accept() {
        return "traffic_realtime_";
    }

    @Override
    public void save(final List<SyncRecord> records) {
        new DBTemplate<int[]>() {

            @Override
            public int[] execute(Handle handle) {
                PreparedBatch batch = handle.prepareBatch(SQL);
                for (SyncRecord record : records) {
                    String key = record.getKey();
                    int idx = key.lastIndexOf('_');
                    if (idx < 0 || idx == key.length() - 1) continue;
                    String cnum = key.substring(idx + 1);
                    SyncRecordType type = record.getType();
                    Map<String, Object> map = (Map<String, Object>) record.getValue();
                    map.put("cn", cnum);
                    map = newParams(map);
                    batch.add(map);
                }
                return batch.execute();
            }
        }.using(SCHEMA);

    }

    private Map<String, Object> newParams(Map<String, Object> params) {
        Map<String, Object> map = new HashMap<>(1000);
        map.put("cn", null);
        map.put("st", null);
        map.put("ct", null);
        map.put("0002", null);
        map.put("0002_st", null);
        map.put("0002_ct", null);
        map.put("0003", null);
        map.put("0003_st", null);
        map.put("0003_ct", null);
        map.put("4013", null);
        map.put("4013_st", null);
        map.put("4013_ct", null);
        map.put("0004", null);
        map.put("0004_st", null);
        map.put("0004_ct", null);
        map.put("0005", null);
        map.put("0005_st", null);
        map.put("0005_ct", null);
        map.put("0006", null);
        map.put("0006_st", null);
        map.put("0006_ct", null);
        map.put("0007", null);
        map.put("0007_st", null);
        map.put("0007_ct", null);
        map.put("0008", null);
        map.put("0008_st", null);
        map.put("0008_ct", null);
        map.put("0009", null);
        map.put("0009_st", null);
        map.put("0009_ct", null);
        map.put("000A", null);
        map.put("000A_st", null);
        map.put("000A_ct", null);
        map.put("000B", null);
        map.put("000B_st", null);
        map.put("000B_ct", null);
        map.put("000D", null);
        map.put("000D_st", null);
        map.put("000D_ct", null);
        map.put("000E", null);
        map.put("000E_st", null);
        map.put("000E_ct", null);
        map.put("0010", null);
        map.put("0010_st", null);
        map.put("0010_ct", null);
        map.put("0011", null);
        map.put("0011_st", null);
        map.put("0011_ct", null);
        map.put("0014", null);
        map.put("0014_st", null);
        map.put("0014_ct", null);
        map.put("001F", null);
        map.put("001F_st", null);
        map.put("001F_ct", null);
        map.put("0024", null);
        map.put("0024_st", null);
        map.put("0024_ct", null);
        map.put("0025", null);
        map.put("0025_st", null);
        map.put("0025_ct", null);
        map.put("0027", null);
        map.put("0027_st", null);
        map.put("0027_ct", null);
        map.put("0028", null);
        map.put("0028_st", null);
        map.put("0028_ct", null);
        map.put("0029", null);
        map.put("0029_st", null);
        map.put("0029_ct", null);
        map.put("002A", null);
        map.put("002A_st", null);
        map.put("002A_ct", null);
        map.put("002B", null);
        map.put("002B_st", null);
        map.put("002B_ct", null);
        map.put("002C", null);
        map.put("002C_st", null);
        map.put("002C_ct", null);
        map.put("002D", null);
        map.put("002D_st", null);
        map.put("002D_ct", null);
        map.put("002E", null);
        map.put("002E_st", null);
        map.put("002E_ct", null);
        map.put("002F", null);
        map.put("002F_st", null);
        map.put("002F_ct", null);
        map.put("0030", null);
        map.put("0030_st", null);
        map.put("0030_ct", null);
        map.put("0031", null);
        map.put("0031_st", null);
        map.put("0031_ct", null);
        map.put("0032", null);
        map.put("0032_st", null);
        map.put("0032_ct", null);
        map.put("0033", null);
        map.put("0033_st", null);
        map.put("0033_ct", null);
        map.put("0034", null);
        map.put("0034_st", null);
        map.put("0034_ct", null);
        map.put("0035", null);
        map.put("0035_st", null);
        map.put("0035_ct", null);
        map.put("0036", null);
        map.put("0036_st", null);
        map.put("0036_ct", null);
        map.put("0039", null);
        map.put("0039_st", null);
        map.put("0039_ct", null);
        map.put("0040", null);
        map.put("0040_st", null);
        map.put("0040_ct", null);
        map.put("0041", null);
        map.put("0041_st", null);
        map.put("0041_ct", null);
        map.put("0042", null);
        map.put("0042_st", null);
        map.put("0042_ct", null);
        map.put("0043", null);
        map.put("0043_st", null);
        map.put("0043_ct", null);
        map.put("0044", null);
        map.put("0044_st", null);
        map.put("0044_ct", null);
        map.put("0045", null);
        map.put("0045_st", null);
        map.put("0045_ct", null);
        map.put("0046", null);
        map.put("0046_st", null);
        map.put("0046_ct", null);
        map.put("0047", null);
        map.put("0047_st", null);
        map.put("0047_ct", null);
        map.put("0048", null);
        map.put("0048_st", null);
        map.put("0048_ct", null);
        map.put("0049", null);
        map.put("0049_st", null);
        map.put("0049_ct", null);
        map.put("004A", null);
        map.put("004A_st", null);
        map.put("004A_ct", null);
        map.put("7D01", null);
        map.put("7D01_st", null);
        map.put("7D01_ct", null);
        map.put("7D02", null);
        map.put("7D02_st", null);
        map.put("7D02_ct", null);
        map.put("7D03", null);
        map.put("7D03_st", null);
        map.put("7D03_ct", null);
        map.put("7D04", null);
        map.put("7D04_st", null);
        map.put("7D04_ct", null);
        map.put("7D05", null);
        map.put("7D05_st", null);
        map.put("7D05_ct", null);
        map.put("7D06", null);
        map.put("7D06_st", null);
        map.put("7D06_ct", null);
        map.put("7D07", null);
        map.put("7D07_st", null);
        map.put("7D07_ct", null);
        map.put("7D08", null);
        map.put("7D08_st", null);
        map.put("7D08_ct", null);
        map.put("7D09", null);
        map.put("7D09_st", null);
        map.put("7D09_ct", null);
        map.put("7D0A", null);
        map.put("7D0A_st", null);
        map.put("7D0A_ct", null);
        map.put("7D0B", null);
        map.put("7D0B_st", null);
        map.put("7D0B_ct", null);
        map.put("7D0C", null);
        map.put("7D0C_st", null);
        map.put("7D0C_ct", null);
        map.put("7D0D", null);
        map.put("7D0D_st", null);
        map.put("7D0D_ct", null);
        map.put("7F01", null);
        map.put("7F01_st", null);
        map.put("7F01_ct", null);
        map.put("7F02", null);
        map.put("7F02_st", null);
        map.put("7F02_ct", null);
        map.put("7F03", null);
        map.put("7F03_st", null);
        map.put("7F03_ct", null);
        map.put("7F04", null);
        map.put("7F04_st", null);
        map.put("7F04_ct", null);
        map.put("7F05", null);
        map.put("7F05_st", null);
        map.put("7F05_ct", null);
        map.put("7F06", null);
        map.put("7F06_st", null);
        map.put("7F06_ct", null);
        map.put("7F07", null);
        map.put("7F07_st", null);
        map.put("7F07_ct", null);
        map.put("7F08", null);
        map.put("7F08_st", null);
        map.put("7F08_ct", null);
        map.put("7F09", null);
        map.put("7F09_st", null);
        map.put("7F09_ct", null);
        map.put("7F0A", null);
        map.put("7F0A_st", null);
        map.put("7F0A_ct", null);
        map.put("7F0B", null);
        map.put("7F0B_st", null);
        map.put("7F0B_ct", null);
        map.put("7F0C", null);
        map.put("7F0C_st", null);
        map.put("7F0C_ct", null);
        map.put("7F0D", null);
        map.put("7F0D_st", null);
        map.put("7F0D_ct", null);
        map.put("7F0E", null);
        map.put("7F0E_st", null);
        map.put("7F0E_ct", null);
        map.put("7F0F", null);
        map.put("7F0F_st", null);
        map.put("7F0F_ct", null);
        map.put("7F10", null);
        map.put("7F10_st", null);
        map.put("7F10_ct", null);
        map.put("7F11", null);
        map.put("7F11_st", null);
        map.put("7F11_ct", null);
        map.put("7F12", null);
        map.put("7F12_st", null);
        map.put("7F12_ct", null);
        map.put("7F13", null);
        map.put("7F13_st", null);
        map.put("7F13_ct", null);
        map.put("7F14", null);
        map.put("7F14_st", null);
        map.put("7F14_ct", null);
        map.put("7F15", null);
        map.put("7F15_st", null);
        map.put("7F15_ct", null);
        map.put("7F16", null);
        map.put("7F16_st", null);
        map.put("7F16_ct", null);
        map.put("7F17", null);
        map.put("7F17_st", null);
        map.put("7F17_ct", null);
        map.put("7F18", null);
        map.put("7F18_st", null);
        map.put("7F18_ct", null);
        map.put("7F19", null);
        map.put("7F19_st", null);
        map.put("7F19_ct", null);
        map.put("7F1A", null);
        map.put("7F1A_st", null);
        map.put("7F1A_ct", null);
        map.put("7F1B", null);
        map.put("7F1B_st", null);
        map.put("7F1B_ct", null);
        map.put("7F1C", null);
        map.put("7F1C_st", null);
        map.put("7F1C_ct", null);
        map.put("7F1D", null);
        map.put("7F1D_st", null);
        map.put("7F1D_ct", null);
        map.put("7F1E", null);
        map.put("7F1E_st", null);
        map.put("7F1E_ct", null);
        map.put("7F1F", null);
        map.put("7F1F_st", null);
        map.put("7F1F_ct", null);
        map.put("7F20", null);
        map.put("7F20_st", null);
        map.put("7F20_ct", null);
        map.put("7F21", null);
        map.put("7F21_st", null);
        map.put("7F21_ct", null);
        map.put("7F22", null);
        map.put("7F22_st", null);
        map.put("7F22_ct", null);
        map.put("7F23", null);
        map.put("7F23_st", null);
        map.put("7F23_ct", null);
        map.put("7F24", null);
        map.put("7F24_st", null);
        map.put("7F24_ct", null);
        map.put("7F25", null);
        map.put("7F25_st", null);
        map.put("7F25_ct", null);
        map.put("7F26", null);
        map.put("7F26_st", null);
        map.put("7F26_ct", null);
        map.put("7F27", null);
        map.put("7F27_st", null);
        map.put("7F27_ct", null);
        map.put("7F28", null);
        map.put("7F28_st", null);
        map.put("7F28_ct", null);
        map.put("7F29", null);
        map.put("7F29_st", null);
        map.put("7F29_ct", null);
        map.put("7F2A", null);
        map.put("7F2A_st", null);
        map.put("7F2A_ct", null);
        map.put("7F2B", null);
        map.put("7F2B_st", null);
        map.put("7F2B_ct", null);
        map.put("7F2C", null);
        map.put("7F2C_st", null);
        map.put("7F2C_ct", null);
        map.put("7F2D", null);
        map.put("7F2D_st", null);
        map.put("7F2D_ct", null);
        map.put("7F2E", null);
        map.put("7F2E_st", null);
        map.put("7F2E_ct", null);
        map.put("7F2F", null);
        map.put("7F2F_st", null);
        map.put("7F2F_ct", null);
        map.put("7F30", null);
        map.put("7F30_st", null);
        map.put("7F30_ct", null);
        map.put("7F31", null);
        map.put("7F31_st", null);
        map.put("7F31_ct", null);
        map.put("7F32", null);
        map.put("7F32_st", null);
        map.put("7F32_ct", null);
        map.put("8001", null);
        map.put("8001_st", null);
        map.put("8001_ct", null);
        map.put("8002", null);
        map.put("8002_st", null);
        map.put("8002_ct", null);
        map.put("8003", null);
        map.put("8003_st", null);
        map.put("8003_ct", null);
        map.put("8004", null);
        map.put("8004_st", null);
        map.put("8004_ct", null);
        map.put("8005", null);
        map.put("8005_st", null);
        map.put("8005_ct", null);
        map.put("8006", null);
        map.put("8006_st", null);
        map.put("8006_ct", null);
        map.put("8007", null);
        map.put("8007_st", null);
        map.put("8007_ct", null);
        map.put("8008", null);
        map.put("8008_st", null);
        map.put("8008_ct", null);
        map.put("8009", null);
        map.put("8009_st", null);
        map.put("8009_ct", null);
        map.put("800A", null);
        map.put("800A_st", null);
        map.put("800A_ct", null);
        map.put("800B", null);
        map.put("800B_st", null);
        map.put("800B_ct", null);
        map.put("800C", null);
        map.put("800C_st", null);
        map.put("800C_ct", null);
        map.put("800D", null);
        map.put("800D_st", null);
        map.put("800D_ct", null);
        map.put("800E", null);
        map.put("800E_st", null);
        map.put("800E_ct", null);
        map.put("800F", null);
        map.put("800F_st", null);
        map.put("800F_ct", null);
        map.put("8010", null);
        map.put("8010_st", null);
        map.put("8010_ct", null);
        map.put("8011", null);
        map.put("8011_st", null);
        map.put("8011_ct", null);
        map.put("8051", null);
        map.put("8051_st", null);
        map.put("8051_ct", null);
        map.put("8052", null);
        map.put("8052_st", null);
        map.put("8052_ct", null);
        map.put("8053", null);
        map.put("8053_st", null);
        map.put("8053_ct", null);
        map.put("8054", null);
        map.put("8054_st", null);
        map.put("8054_ct", null);
        map.put("8055", null);
        map.put("8055_st", null);
        map.put("8055_ct", null);
        map.put("8056", null);
        map.put("8056_st", null);
        map.put("8056_ct", null);
        map.put("8057", null);
        map.put("8057_st", null);
        map.put("8057_ct", null);
        map.put("8058", null);
        map.put("8058_st", null);
        map.put("8058_ct", null);
        map.put("8059", null);
        map.put("8059_st", null);
        map.put("8059_ct", null);
        map.put("805A", null);
        map.put("805A_st", null);
        map.put("805A_ct", null);
        map.put("805B", null);
        map.put("805B_st", null);
        map.put("805B_ct", null);
        map.put("805C", null);
        map.put("805C_st", null);
        map.put("805C_ct", null);
        map.put("805D", null);
        map.put("805D_st", null);
        map.put("805D_ct", null);
        map.put("805E", null);
        map.put("805E_st", null);
        map.put("805E_ct", null);
        map.put("805F", null);
        map.put("805F_st", null);
        map.put("805F_ct", null);
        map.put("8060", null);
        map.put("8060_st", null);
        map.put("8060_ct", null);
        map.put("8061", null);
        map.put("8061_st", null);
        map.put("8061_ct", null);
        map.put("8062", null);
        map.put("8062_st", null);
        map.put("8062_ct", null);
        map.put("8063", null);
        map.put("8063_st", null);
        map.put("8063_ct", null);
        map.put("8064", null);
        map.put("8064_st", null);
        map.put("8064_ct", null);
        map.put("8065", null);
        map.put("8065_st", null);
        map.put("8065_ct", null);
        map.put("8066", null);
        map.put("8066_st", null);
        map.put("8066_ct", null);
        map.put("8067", null);
        map.put("8067_st", null);
        map.put("8067_ct", null);
        map.put("8068", null);
        map.put("8068_st", null);
        map.put("8068_ct", null);
        map.put("8069", null);
        map.put("8069_st", null);
        map.put("8069_ct", null);
        map.put("806A", null);
        map.put("806A_st", null);
        map.put("806A_ct", null);
        map.put("806B", null);
        map.put("806B_st", null);
        map.put("806B_ct", null);
        map.put("806C", null);
        map.put("806C_st", null);
        map.put("806C_ct", null);
        map.put("806D", null);
        map.put("806D_st", null);
        map.put("806D_ct", null);
        map.put("806E", null);
        map.put("806E_st", null);
        map.put("806E_ct", null);
        map.put("806F", null);
        map.put("806F_st", null);
        map.put("806F_ct", null);
        map.put("8070", null);
        map.put("8070_st", null);
        map.put("8070_ct", null);
        map.put("8071", null);
        map.put("8071_st", null);
        map.put("8071_ct", null);
        map.put("8072", null);
        map.put("8072_st", null);
        map.put("8072_ct", null);
        map.put("8073", null);
        map.put("8073_st", null);
        map.put("8073_ct", null);
        map.put("8074", null);
        map.put("8074_st", null);
        map.put("8074_ct", null);
        map.put("8075", null);
        map.put("8075_st", null);
        map.put("8075_ct", null);
        map.put("8076", null);
        map.put("8076_st", null);
        map.put("8076_ct", null);
        map.put("8077", null);
        map.put("8077_st", null);
        map.put("8077_ct", null);
        map.put("8078", null);
        map.put("8078_st", null);
        map.put("8078_ct", null);
        map.put("FF01", null);
        map.put("FF01_st", null);
        map.put("FF01_ct", null);
        map.put("0050", null);
        map.put("0051", null);
        map.put("0050_ct", null);
        map.put("0051_ct", null);
        map.put("0050_st", null);
        map.put("0051_st", null);
        map.put("0052", null);
        map.put("0053", null);
        map.put("0054", null);
        map.put("0055", null);
        map.put("0052_ct", null);
        map.put("0052_st", null);
        map.put("0053_ct", null);
        map.put("0053_st", null);
        map.put("0054_ct", null);
        map.put("0054_st", null);
        map.put("0055_ct", null);
        map.put("0055_st", null);
        map.put("0100", null);
        map.put("0100_ct", null);
        map.put("0100_st", null);
        map.put("0101", null);
        map.put("0101_ct", null);
        map.put("0101_st", null);
        map.put("0102", null);
        map.put("0102_ct", null);
        map.put("0102_st", null);
        map.put("0103", null);
        map.put("0103_ct", null);
        map.put("0103_st", null);
        map.put("8100", null);
        map.put("8100_ct", null);
        map.put("8100_st", null);
        map.put("8101", null);
        map.put("8101_ct", null);
        map.put("8101_st", null);
        map.put("8102", null);
        map.put("8102_ct", null);
        map.put("8102_st", null);
        map.put("8103", null);
        map.put("8103_ct", null);
        map.put("8103_st", null);
        map.put("8104", null);
        map.put("8104_ct", null);
        map.put("8104_st", null);
        map.put("8105", null);
        map.put("8105_ct", null);
        map.put("8105_st", null);
        map.put("8106", null);
        map.put("8106_ct", null);
        map.put("8106_st", null);
        map.put("8107", null);
        map.put("8107_ct", null);
        map.put("8107_st", null);
        map.put("8108", null);
        map.put("8108_ct", null);
        map.put("8108_st", null);
        map.put("8109", null);
        map.put("8109_ct", null);
        map.put("8109_st", null);
        map.put("810A", null);
        map.put("810A_ct", null);
        map.put("810A_st", null);
        map.put("810B", null);
        map.put("810B_ct", null);
        map.put("810B_st", null);
        map.put("0070", null);
        map.put("0070_ct", null);
        map.put("0070_st", null);
        map.put("0071", null);
        map.put("0071_ct", null);
        map.put("0071_st", null);
        map.put("0072", null);
        map.put("0072_ct", null);
        map.put("0072_st", null);
        map.put("0056", null);
        map.put("0056_ct", null);
        map.put("0056_st", null);
        map.put("0057", null);
        map.put("0057_ct", null);
        map.put("0057_st", null);
        for (Map.Entry<String, Object> entry : params.entrySet()) {
            if (map.containsKey(entry.getKey())) {
                map.put(entry.getKey(), entry.getValue());
            }
        }
        Set<String> keys = map.keySet();
        for (String key : keys) {
            parse(key, map);
        }
        return map;
    }

    private void parse(String key, Map<String, Object> map) {
        String value = (String) map.get(key);
        if (value == null) {
            return;
        } else if (key.endsWith("_st") || key.endsWith("_ct") || key.equals("st") || key.equals("ct") || key.equals("cn")) {
            return;
        } else if ("8001".equals(key) || "8002".equals(key) || "8003".equals(key) || "8004".equals(key) || "8005".equals(key) || "8006".equals(key) || "8007".equals(key) || "8008".equals(key) || "8009".equals(key) || "800A".equals(key) || "800B".equals(key) || "800C".equals(key) || "800D".equals(key) || "800E".equals(key) || "800F".equals(key) || "8010".equals(key) || "8011".equals(key)) {
            return;
        } else if ("4013".equals(key) || "0033".equals(key) || "0034".equals(key) || "7D0B".equals(key) || "7D0D".equals(key) || "7F01".equals(key) || "7F02".equals(key) || "7F03".equals(key) || "7F04".equals(key) || "0057".equals(key)) {
            map.put(key, Integer.valueOf(value));
        } else if ("0002".equals(key) || "0003".equals(key) || "0007".equals(key) || "000E".equals(key) || "0010".equals(key) || "0014".equals(key) || "001F".equals(key) || "7D01".equals(key) || "7D02".equals(key) || "7D09".equals(key) || "0050".equals(key) || "0051".equals(key) || "0052".equals(key) || "0053".equals(key) || "0054".equals(key) || "0055".equals(key) || "0103".equals(key) || "0070".equals(key) || "0071".equals(key) || "0072".equals(key) || "0056".equals(key)) {
            map.put(key, new BigDecimal(value));
        } else {
            map.put(key, Double.valueOf(value).intValue());
        }
    }

    @Override
    public void close() throws IOException {
    }

}
